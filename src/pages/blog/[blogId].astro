---
import { getBlogDetail, getBlogs } from "@/lib/microcms";
import Main from "@/layouts/main.astro";
import { Article } from "@/components/Article";
import { getImage } from "astro:assets";

// 詳細記事ページの全パスを取得
export async function getStaticPaths() {
    const response = await getBlogs({ fields: ["id"] });
    return response.contents.map((content: any) => ({
        params: {
            blogId: content.id,
        },
    }));
}

const { blogId } = Astro.params;
const blog = await getBlogDetail(blogId as string, {
    fields: ["id", "title", "content", "createdAt", "eyecatch", "category"],
});

const optimizedEyecatch = await getImage({
    src: blog.eyecatch.url,
    alt: blog.title,
    inferSize: true,
});

import * as cheerio from "cheerio";

const $ = cheerio.load(blog.content);
const headings = $("h1, h2, h3").toArray().map((data) => {
    const text = $(data).text();
    const id = data.attribs.id;
    // @ts-ignore
    const name = data.name;
    return { text, id, name };
});

$("h1, h2, h3").each((_, elm) => {
    const text = $(elm).text();
    // @ts-ignore
    const id = elm.attribs.id;
    $(elm).attr("id", id);
});

const imagePromises = $("img").map(async (_, el) => {
    const element = $(el);
    const src = element.attr("src");
    const alt = element.attr("alt");
    if (src) {
        const optimized = await getImage({ src, alt, inferSize: true });
        element.attr(optimized.attributes);
    }
}).get();

await Promise.all(imagePromises);

const updatedContent = $.html();

const updatedBlog = {
    ...blog,
    content: updatedContent,
};
---

<Main
    title={blog.title}
    description={blog.description || blog.title}
    image={blog.eyecatch.url}
    type="article"
>
    <Article blog={updatedBlog} headings={headings} optimizedEyecatch={optimizedEyecatch} />
</Main>